[package]
name = "wallet-controller"
license.workspace = true
edition.workspace = true
version.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
chainstate = { path = "../../chainstate" }
common = { path = "../../common" }
consensus = { path = "../../consensus" }
crypto = { path = "../../crypto" }
logging = { path = "../../logging" }
mempool-types = { path = "../../mempool/types" }
mempool = { path = "../../mempool" }
node-comm = { path = "../wallet-node-client" }
serialization = { path = "../../serialization" }
utils = { path = "../../utils" }
utils-tokio = { path = "../../utils/tokio" }
wallet = { path = ".." }
wallet-storage = { path = "../storage" }
wallet-types = { path = "../types" }

async-trait.workspace = true
bip39 = { workspace = true, default-features = false, features = ["std", "zeroize"] }
futures = { workspace = true, default-features = false }
serde.workspace = true
thiserror.workspace = true
tokio = { workspace = true, default-features = false, features = ["io-util", "macros", "net", "rt", "sync"] }
zeroize.workspace = true

[dev-dependencies]
chainstate-test-framework = { path = "../../chainstate/test-framework" }
p2p-types = { path = "../../p2p/types" }
test-utils = { path = "../../test-utils" }

anyhow.workspace = true
rstest.workspace = true
