version: '3'

services:
  api-postgres-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: $API_SERVER_POSTGRES_USER
      POSTGRES_PASSWORD: $API_SERVER_POSTGRES_PASSWORD
      POSTGRES_DB: $API_SERVER_POSTGRES_DB
    ports:
      # This is only needed if you want to examine the contents of the db from the host system,
      # e.g. via PgAdmin.
      - "$API_SERVER_POSTGRES_HOST_PORT:5432"
    volumes:
      # Explicitly mount postgres docker image's mount point to a named volume (without this,
      # docker will create an anonymous volume instead).
       - api_postgres_db:/var/lib/postgresql/data

  api-blockchain-scanner-daemon:
    image: $DOCKERHUB_USERNAME/api-blockchain-scanner-daemon:$ML_SOFTWARE_VERSION
    volumes:
      - node_data:/home/mintlayer
    command: api-blockchain-scanner-daemon
    depends_on:
      - api-postgres-db
      - node-daemon
    environment:
      - ML_API_SCANNER_DAEMON_POSTGRES_HOST=api-postgres-db
      - ML_API_SCANNER_DAEMON_POSTGRES_USER=$API_SERVER_POSTGRES_USER
      - ML_API_SCANNER_DAEMON_POSTGRES_PASSWORD=$API_SERVER_POSTGRES_PASSWORD
      - ML_API_SCANNER_DAEMON_POSTGRES_DATABASE=$API_SERVER_POSTGRES_DB
      - ML_API_SCANNER_DAEMON_RPC_ADDRESS=node-daemon:3030
      - RUST_LOG

  api-web-server:
    image: $DOCKERHUB_USERNAME/api-web-server:$ML_SOFTWARE_VERSION
    volumes:
      - node_data:/home/mintlayer
    command: api-web-server
    depends_on:
      - api-postgres-db
      - api-blockchain-scanner-daemon
      - node-daemon
    environment:
      - ML_API_WEB_SRV_ADDRESS=0.0.0.0:3000
      - ML_API_WEB_SRV_POSTGRES_HOST=api-postgres-db
      - ML_API_WEB_SRV_POSTGRES_USER=$API_SERVER_POSTGRES_USER
      - ML_API_WEB_SRV_POSTGRES_PASSWORD=$API_SERVER_POSTGRES_PASSWORD
      - ML_API_WEB_SRV_POSTGRES_DATABASE=$API_SERVER_POSTGRES_DB
      - ML_API_WEB_SRV_RPC_ADDRESS=node-daemon:3030
      - RUST_LOG
    ports:
      - "$API_SERVER_HOST_PORT:3000"

volumes:
  api_postgres_db:
