version: '3'

services:
  node-daemon:
    image: $DOCKERHUB_USERNAME/node-daemon:$ML_SOFTWARE_VERSION
    volumes:
      - ./container_home:/home/mintlayer
    command: node-daemon mainnet
    environment:
      # Note:
      # The default rpc bind address is '127.0.0.1', so it'll only be reachable from the same
      # container; to make it reachable from other containers, we need to set it to '0.0.0.0'.
      # For p2p, the default address is already '0.0.0.0', so this is not strictly needed; we
      # do it for consistency and in order to specify the port explicitly (for extra readability).
      # The latter has the additional benefit that it'll be easier to adapt this 'example-mainnet'
      # for the testnet, which uses different ports by default.
      # We use the same approach in other ".yml" files too.
      - ML_MAINNET_NODE_RPC_BIND_ADDRESS=0.0.0.0:3030
      - ML_MAINNET_NODE_P2P_BIND_ADDRESSES=0.0.0.0:3031
      - RUST_LOG
    ports:
      # Note: this is only needed if you want to access the node from the host system.
      - "$NODE_RPC_HOST_PORT:3030"
      - "$NODE_P2P_HOST_PORT:3031"

  wallet-rpc-daemon:
    image: $DOCKERHUB_USERNAME/wallet-rpc-daemon:$ML_SOFTWARE_VERSION
    volumes:
      - ./container_home:/home/mintlayer
    command: wallet-rpc-daemon
    depends_on:
      - node-daemon
    environment:
      - ML_WALLET_RPC_DAEMON_NODE_RPC_ADDRESS=node-daemon:3030
      # FIXME: should wallet-rpc-daemon use the default cookie path automatically, like wallet-cli does?
      - ML_WALLET_RPC_DAEMON_NODE_COOKIE_FILE=/home/mintlayer/.mintlayer/mainnet/.cookie
      - ML_WALLET_RPC_DAEMON_RPC_BIND_ADDRESS=0.0.0.0:3034
      - ML_WALLET_RPC_DAEMON_RPC_USERNAME=$WALLET_RPC_DAEMON_USERNAME
      - ML_WALLET_RPC_DAEMON_RPC_PASSWORD=$WALLET_RPC_DAEMON_PASSWORD
      - RUST_LOG
    ports:
      - "$WALLET_RPC_DAEMON_HOST_PORT:3034"

  ### Services needed to run the api server ###
  api-postgres-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: $API_SERVER_POSTGRES_USER
      POSTGRES_PASSWORD: $API_SERVER_POSTGRES_PASSWORD
      POSTGRES_DB: $API_SERVER_POSTGRES_DB
    ports:
      # This is only needed if you want to examine the contents of the db from the host system,
      # e.g. via PgAdmin.
      - "$API_SERVER_POSTGRES_HOST_PORT:5432"
    volumes:
      # Explicitly mount postgres docker image's mount point to a named volume (without this,
      # docker will create an anonymous volume instead).
       - api_postgres_db:/var/lib/postgresql/data

  api-blockchain-scanner-daemon:
    image: $DOCKERHUB_USERNAME/api-blockchain-scanner-daemon:$ML_SOFTWARE_VERSION
    volumes:
      - ./container_home:/home/mintlayer
    command: api-blockchain-scanner-daemon
    depends_on:
      - api-postgres-db
      - node-daemon
    environment:
      - ML_API_SCANNER_DAEMON_POSTGRES_HOST=api-postgres-db
      - ML_API_SCANNER_DAEMON_POSTGRES_USER=$API_SERVER_POSTGRES_USER
      - ML_API_SCANNER_DAEMON_POSTGRES_PASSWORD=$API_SERVER_POSTGRES_PASSWORD
      - ML_API_SCANNER_DAEMON_POSTGRES_DATABASE=$API_SERVER_POSTGRES_DB
      - ML_API_SCANNER_DAEMON_RPC_ADDRESS=node-daemon:3030
      - RUST_LOG

  api-web-server:
    image: $DOCKERHUB_USERNAME/api-web-server:$ML_SOFTWARE_VERSION
    volumes:
      - ./container_home:/home/mintlayer
    command: api-web-server
    depends_on:
      - api-postgres-db
      - api-blockchain-scanner-daemon
      - node-daemon
    environment:
      - ML_API_WEB_SRV_ADDRESS=0.0.0.0:3000
      - ML_API_WEB_SRV_POSTGRES_HOST=api-postgres-db
      - ML_API_WEB_SRV_POSTGRES_USER=$API_SERVER_POSTGRES_USER
      - ML_API_WEB_SRV_POSTGRES_PASSWORD=$API_SERVER_POSTGRES_PASSWORD
      - ML_API_WEB_SRV_POSTGRES_DATABASE=$API_SERVER_POSTGRES_DB
      - ML_API_WEB_SRV_RPC_ADDRESS=node-daemon:3030
      - RUST_LOG
    ports:
      - "$API_SERVER_HOST_PORT:3000"
  ### End of services needed to run the api server ###

volumes:
  api_postgres_db:
